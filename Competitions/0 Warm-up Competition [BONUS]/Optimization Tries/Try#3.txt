public static void ProcessDocument(string docContent, ref Dictionary<string, double> frequencyDictionary, ref HashSet<string> words)
{
    var allWords = docContent
                    .Select(c => IsAlphaNumeric(c) ? c.ToString() : " ") // Convert alphanumeric characters to strings, non-alphanumeric to space
                    .Aggregate(new StringBuilder(), (sb, c) => sb.Append(c)) // Aggregate into a StringBuilder
                    .ToString() // Convert StringBuilder to string
                    .Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries); // Split by space and remove empty entries

    foreach (var word in allWords)
    {
        if (!string.IsNullOrEmpty(word))
        {
            lock (lockObject)
            {
                if (frequencyDictionary.TryGetValue(word, out double count))
                {
                    frequencyDictionary[word] = count + 1;
                }
                else
                {
                    frequencyDictionary[word] = 1;
                }
            }
            lock (lockObject)
            {
                words.Add(word);
            }
        }
    }

}